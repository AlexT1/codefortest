package com.alexstudy.util;

/**
 * @author AlexTong
 * @ClassName RedPackage
 * @Description TODO()
 * @date 2018/2/9 11:08:45
 */
public class RedPackage {

//    A 领取了 0.26元B 领取了 0.29元C 领取了 0.02元D 领取了 0.56元E 领取了 0.64元……微信是采用什么样的算法做到的？简单百度了下，目前尚未有官方的说明，仅仅在知乎里有一个较为热门的讨论，不过他们讨论的太过于深入，有掉坑之嫌。我按照自己的逻辑尝试了下，这个算法需要满足以下几点要求1、每个人都要能够领取到红包；2、每个人领取到的红包金额总和=总金额；3、每个人领取到的红包金额不等，但也不能差的太离谱，不然就没趣味；4、算法一定要简单，不然对不起腾讯这个招牌；正式编码之前，先搭建一个递进的模型来分析规律设定总金额为10元，有N个人随机领取：
//    N=1
//    则红包金额=X元；
//
//    N=2
//    为保证第二个红包可以正常发出，第一个红包金额=0.01至9.99之间的某个随机数
//            第二个红包=10-第一个红包金额；
//
//    N=3
//    红包1=0.01至0.98之间的某个随机数
//            红包2=0.01至(10-红包1-0.01)的某个随机数
//    红包3=10-红包1-红包2
//
//    至此，规律出现啦！开始编码！header("Content-Type: text/html;charset=utf-8");//输出不乱码，你懂的
//    $total=10;//红包总额
//    $num=8;// 分成8个红包，支持8人随机领取
//    $min=0.01;//每个人最少能收到0.01元
//
//for ($i=1;$i<$num;$i++)
//    {
//        $safe_total=$total-($num-$i)*$min;//随机安全上限
//        $money=mt_rand($min*100,$safe_total*100)/100;
//        $total=$total-$money;
//        echo '第'.$i.'个红包：'.$money.' 元，余额：'.$total.' 元 <br/>';
//    }
//    echo '第'.$num.'个红包：'.$total.' 元，余额：0 元';
//    输入一看，波动太大，这数据太无趣了！第1个红包：7.48 元，余额：2.52 元
//    第2个红包：1.9 元，余额：0.62 元
//    第3个红包：0.49 元，余额：0.13 元
//    第4个红包：0.04 元，余额：0.09 元
//    第5个红包：0.03 元，余额：0.06 元
//    第6个红包：0.03 元，余额：0.03 元
//    第7个红包：0.01 元，余额：0.02 元
//    第8个红包：0.02 元，余额：0 元
//    改良一下，将平均值作为随机安全上限来控制波动差header("Content-Type: text/html;charset=utf-8");//输出不乱码，你懂的
//    $total=10;//红包总额
//    $num=8;// 分成8个红包，支持8人随机领取
//    $min=0.01;//每个人最少能收到0.01元
//
//for ($i=1;$i<$num;$i++)
//    {
//        $safe_total=($total-($num-$i)*$min)/($num-$i);//随机安全上限
//        $money=mt_rand($min*100,$safe_total*100)/100;
//        $total=$total-$money;
//        echo '第'.$i.'个红包：'.$money.' 元，余额：'.$total.' 元 <br/>';
//    }
//    echo '第'.$num.'个红包：'.$total.' 元，余额：0 元';
//    输出结果见下图第1个红包：0.06 元，余额：9.94 元
//    第2个红包：1.55 元，余额：8.39 元
//    第3个红包：0.25 元，余额：8.14 元
//    第4个红包：0.98 元，余额：7.16 元
//    第5个红包：1.88 元，余额：5.28 元
//    第6个红包：1.92 元，余额：3.36 元
//    第7个红包：2.98 元，余额：0.38 元
//    第8个红包：0.38 元，余额：0 元
}
